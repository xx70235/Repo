/*
+-----------------------------------------------+
| do NOT edit this file!                        |
+-----------------------------------------------+
| This file is an auto-generated implementation | 
| of the coresponding org.w3c.dom interface via |
| Java-XPCOM                                    |
| (c)2005, Peter Szinek [peter@rt.sk]           |
+-----------------------------------------------+
*/


package org.mozilla.dom.html;

//XPCOM import
import org.mozilla.interfaces.*;


public class HTMLAnchorElementImpl extends HTMLElementImpl implements org.w3c.dom.html2.HTMLAnchorElement
{
    protected HTMLAnchorElementImpl(nsIDOMHTMLAnchorElement mozInst)
    {
        super( mozInst );
    }

    public static HTMLAnchorElementImpl getDOMInstance(nsIDOMHTMLAnchorElement mozInst)
    {
        HTMLAnchorElementImpl node = (HTMLAnchorElementImpl) instances.get(mozInst);
        return node == null ? new HTMLAnchorElementImpl(mozInst) : node;
    }
    
    @Override
	public nsIDOMHTMLAnchorElement getInstance()
    {
        //This was already queryinterfaced, so safe to cast
        return (nsIDOMHTMLAnchorElement) moz;
    }
    
    public void setCharset(String charset)
    {
        getInstance().setCharset(charset);
    }
    
    public String getCoords()
    {
        String result = getInstance().getCoords();
        return result;
    }
    
    public String getHreflang()
    {
        String result = getInstance().getHreflang();
        return result;
    }
    
    public void setRev(String rev)
    {
        getInstance().setRev(rev);
    }
    
    public String getRev()
    {
        String result = getInstance().getRev();
        return result;
    }
    
    public String getTarget()
    {
        String result = getInstance().getTarget();
        return result;
    }
    
    public void setRel(String rel)
    {
        getInstance().setRel(rel);
    }
    
    public String getRel()
    {
        String result = getInstance().getRel();
        return result;
    }
    
    public void setType(String type)
    {
        getInstance().setType(type);
    }
    
    public String getCharset()
    {
        String result = getInstance().getCharset();
        return result;
    }
    
    public String getName()
    {
        String result = getInstance().getName();
        return result;
    }
    
    public void blur()
    {
        getInstance().blur();
    }
    
    public void setTabIndex(int tabIndex)
    {
        getInstance().setTabIndex(tabIndex);
    }
    
    public String getAccessKey()
    {
        String result = getInstance().getAccessKey();
        return result;
    }
    
    public void setName(String name)
    {
        getInstance().setName(name);
    }
    
    public void setTarget(String target)
    {
        getInstance().setTarget(target);
    }
    
    public String getType()
    {
        String result = getInstance().getType();
        return result;
    }
    
    public void focus()
    {
        getInstance().focus();
    }
    
    public void setAccessKey(String accessKey)
    {
        getInstance().setAccessKey(accessKey);
    }
    
    public void setCoords(String coords)
    {
        getInstance().setCoords(coords);
    }
    
    public int getTabIndex()
    {
        int result = getInstance().getTabIndex();
        return result;
    }
    
    public void setHreflang(String hreflang)
    {
        getInstance().setHreflang(hreflang);
    }
    
    public void setHref(String href)
    {
        getInstance().setHref(href);
    }
    
    public String getShape()
    {
        String result = getInstance().getShape();
        return result;
    }
    
    public String getHref()
    {
        String result = getInstance().getHref();
        return result;
    }
    
    public void setShape(String shape)
    {
        getInstance().setShape(shape);
    }
    
}
