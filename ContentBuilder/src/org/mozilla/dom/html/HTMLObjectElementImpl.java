/*
+-----------------------------------------------+
| do NOT edit this file!                        |
+-----------------------------------------------+
| This file is an auto-generated implementation | 
| of the coresponding org.w3c.dom interface via |
| Java-XPCOM                                    |
| (c)2005, Peter Szinek [peter@rt.sk]           |
+-----------------------------------------------+
*/


package org.mozilla.dom.html;

//org.w3c imports
import org.w3c.dom.*;
import org.w3c.dom.html2.*;
//com.lixto imports
import org.mozilla.dom.*;
//XPCOM import
import org.mozilla.interfaces.*;


public class HTMLObjectElementImpl extends HTMLElementImpl implements org.w3c.dom.html2.HTMLObjectElement
{
    protected HTMLObjectElementImpl(nsIDOMHTMLObjectElement mozInst)
    {
        super( mozInst );
    }

    public static HTMLObjectElementImpl getDOMInstance(nsIDOMHTMLObjectElement mozInst)
    {
        HTMLObjectElementImpl node = (HTMLObjectElementImpl) instances.get(mozInst);
        return node == null ? new HTMLObjectElementImpl(mozInst) : node;
    }
    
    @Override
	public nsIDOMHTMLObjectElement getInstance()
    {
        //This was already queryinterfaced, so safe to cast
        return (nsIDOMHTMLObjectElement) moz;
    }
    
    public String getCodeType()
    {
        String result = getInstance().getCodeType();
        return result;
    }
    
    public HTMLFormElement getForm()
    {
        nsIDOMHTMLFormElement result = getInstance().getForm();
        return (HTMLFormElement) NodeFactory.getNodeInstance(result);
    }
    
    public String getWidth()
    {
        String result = getInstance().getWidth();
        return result;
    }
    
    public void setCodeType(String codeType)
    {
        getInstance().setCodeType(codeType);
    }
    
    public void setWidth(String width)
    {
        getInstance().setWidth(width);
    }
    
    public void setType(String type)
    {
        getInstance().setType(type);
    }
    
    public Document getContentDocument()
    {
        nsIDOMDocument result = getInstance().getContentDocument();
        return (Document) NodeFactory.getNodeInstance(result);
    }
    
    public String getName()
    {
        String result = getInstance().getName();
        return result;
    }
    
    public String getHeight()
    {
        String result = getInstance().getHeight();
        return result;
    }
    
    public int getTabIndex()
    {
        int result = getInstance().getTabIndex();
        return result;
    }
    
    public void setHspace(int hspace)
    {
        getInstance().setHspace(hspace);
    }
    
    public String getCodeBase()
    {
        String result = getInstance().getCodeBase();
        return result;
    }
    
    public String getStandby()
    {
        String result = getInstance().getStandby();
        return result;
    }
    
    public String getData()
    {
        String result = getInstance().getData();
        return result;
    }
    
    public void setTabIndex(int tabIndex)
    {
        getInstance().setTabIndex(tabIndex);
    }
    
    public int getHspace()
    {
        return getInstance().getHspace();
    }
    
    public void setHeight(String height)
    {
        getInstance().setHeight(height);
    }
    
    public String getCode()
    {
        String result = getInstance().getCode();
        return result;
    }
    
    public void setStandby(String standby)
    {
        getInstance().setStandby(standby);
    }
    
    public void setName(String name)
    {
        getInstance().setName(name);
    }
    
    public void setAlign(String align)
    {
        getInstance().setAlign(align);
    }
    
    public String getType()
    {
        String result = getInstance().getType();
        return result;
    }
    
    public String getArchive()
    {
        String result = getInstance().getArchive();
        return result;
    }
    
    public void setDeclare(boolean declare)
    {
        getInstance().setDeclare(declare);
    }
    
    public int getVspace()
    {
        return getInstance().getVspace();
    }
    
    public void setCodeBase(String codeBase)
    {
        getInstance().setCodeBase(codeBase);
    }
    
    public void setUseMap(String useMap)
    {
        getInstance().setUseMap(useMap);
    }
    
    public String getAlign()
    {
        String result = getInstance().getAlign();
        return result;
    }
    
    public void setVspace(int vspace)
    {
        getInstance().setVspace(vspace);
    }
    
    public void setCode(String code)
    {
        getInstance().setCode(code);
    }
    
    public String getUseMap()
    {
        String result = getInstance().getUseMap();
        return result;
    }
    
    public boolean getDeclare()
    {
        boolean result = getInstance().getDeclare();
        return result;
    }
    
    public String getBorder()
    {
        String result = getInstance().getBorder();
        return result;
    }
    
    public void setArchive(String archive)
    {
        getInstance().setArchive(archive);
    }
    
    public void setBorder(String border)
    {
        getInstance().setBorder(border);
    }
    
    public void setData(String data)
    {
        getInstance().setData(data);
    }
    
}
