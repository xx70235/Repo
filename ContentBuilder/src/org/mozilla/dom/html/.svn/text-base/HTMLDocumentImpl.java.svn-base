/*
+-----------------------------------------------+
| do NOT edit this file!                        |
+-----------------------------------------------+
| This file is an auto-generated implementation | 
| of the coresponding org.w3c.dom interface via |
| Java-XPCOM                                    |
| (c)2005, Peter Szinek [peter@rt.sk]           |
+-----------------------------------------------+
*/


package org.mozilla.dom.html;

//org.w3c imports
import org.w3c.dom.*;
import org.w3c.dom.html2.*;
//com.lixto imports
import org.mozilla.dom.*;
//XPCOM import
import org.mozilla.interfaces.*;


public class HTMLDocumentImpl extends DocumentImpl implements org.w3c.dom.html2.HTMLDocument
{
    protected HTMLDocumentImpl(nsIDOMHTMLDocument mozInst)
    {
        super( mozInst );
    }

    public static HTMLDocumentImpl getDOMInstance(nsIDOMHTMLDocument mozInst)
    {
        HTMLDocumentImpl node = (HTMLDocumentImpl) instances.get(mozInst);
        return node == null ? new HTMLDocumentImpl(mozInst) : node;
    }
    
    @Override
	public nsIDOMHTMLDocument getInstance()
    {
        //This was already queryinterfaced, so safe to cast
        return (nsIDOMHTMLDocument) moz;
    }
    
    public String getDomain()
    {

        throw new UnsupportedException();
    }
    
    public void setBody(HTMLElement body)
    {
        nsIDOMHTMLElement mozBody = ((HTMLElementImpl) body).getInstance();
        getInstance().setBody(mozBody);
    }
    
    public HTMLCollection getAnchors()
    {
        nsIDOMHTMLCollection result = getInstance().getAnchors();
        return new HTMLCollectionImpl(result);
    }
    
    public String getCookie()
    {
        String result = getInstance().getCookie();
        return result;
    }
    
    public String getURL()
    {
        String result = getInstance().getURL();
        return result;
    }
    
    public void setTitle(String title)
    {
        getInstance().setTitle(title);
    }
    
    public HTMLCollection getLinks()
    {
        nsIDOMHTMLCollection result = getInstance().getLinks();
        return new HTMLCollectionImpl(result);
    }
    
    public void write(String text)
    {

        throw new UnsupportedException();
    }
    
    public HTMLCollection getForms()
    {
        nsIDOMHTMLCollection result = getInstance().getForms();
        return new HTMLCollectionImpl(result);
    }
    
    public HTMLCollection getImages()
    {
        nsIDOMHTMLCollection result = getInstance().getImages();
        return new HTMLCollectionImpl(result);
    }
    
    public void writeln(String text)
    {

        throw new UnsupportedException();
    }
    
    public NodeList getElementsByName(String elementName)
    {
        nsIDOMNodeList result = getInstance().getElementsByName(elementName);
        return new NodeListImpl(result);
    }
    
    public String getTitle()
    {
        String result = getInstance().getTitle();
        return result;
    }
    
    public void close()
    {
        getInstance().close();
    }
    
    public HTMLCollection getApplets()
    {
        nsIDOMHTMLCollection result = getInstance().getApplets();
        return new HTMLCollectionImpl(result);
    }
    
    public void setCookie(String cookie)
    {
        getInstance().setCookie(cookie);
    }
    
    public void open()
    {

        throw new UnsupportedException();
    }
    
    public String getReferrer()
    {
        String result = getInstance().getReferrer();
        return result;
    }
    
    public HTMLElement getBody()
    {
        nsIDOMHTMLElement result = getInstance().getBody();
        return (HTMLElement) NodeFactory.getNodeInstance(result);
    }
    
}
