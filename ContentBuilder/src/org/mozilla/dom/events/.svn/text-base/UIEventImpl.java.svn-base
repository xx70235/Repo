/*
+-----------------------------------------------+
| do NOT edit this file!                        |
+-----------------------------------------------+
| This file is an auto-generated implementation | 
| of the coresponding org.w3c.dom interface via |
| Java-XPCOM                                    |
| (c)2005, Peter Szinek [peter@rt.sk]           |
+-----------------------------------------------+
*/


package org.mozilla.dom.events;

import org.w3c.dom.views.*;

import org.mozilla.dom.views.*;

//XPCOM import
import org.mozilla.interfaces.*;


public class UIEventImpl extends EventImpl implements org.w3c.dom.events.UIEvent
{
    protected UIEventImpl(nsIDOMUIEvent mozInst)
    {
        super( mozInst );
    }

    public static UIEventImpl getDOMInstance(nsIDOMUIEvent mozInst)
    {
        UIEventImpl node = (UIEventImpl) instances.get(mozInst);
        return node == null ? new UIEventImpl(mozInst) : node;
    }
    
    @Override
	public nsIDOMUIEvent getInstance()
    {
        //This was already queryinterfaced, so safe to cast
        return (nsIDOMUIEvent) moz;
    }
    
    public AbstractView getView()
    {
        nsIDOMAbstractView result = getInstance().getView();
        return new AbstractViewImpl(result);
    }
    
    public int getDetail()
    {
        int result = getInstance().getDetail();
        return result;
    }
    
    public void initUIEvent(String typeArg, boolean canBubbleArg, boolean cancelableArg, AbstractView viewArg, int detailArg)
    {
        nsIDOMAbstractView mozViewarg = ((AbstractViewImpl) viewArg).getInstance();
        getInstance().initUIEvent(typeArg, canBubbleArg, cancelableArg, mozViewarg, detailArg);
    }
    
}
