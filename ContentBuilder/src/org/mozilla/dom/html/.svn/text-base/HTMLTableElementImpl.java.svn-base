/*
+-----------------------------------------------+
| do NOT edit this file!                        |
+-----------------------------------------------+
| This file is an auto-generated implementation | 
| of the coresponding org.w3c.dom interface via |
| Java-XPCOM                                    |
| (c)2005, Peter Szinek [peter@rt.sk]           |
+-----------------------------------------------+
*/


package org.mozilla.dom.html;

import org.w3c.dom.html2.*;
//com.lixto imports
import org.mozilla.dom.*;
//XPCOM import
import org.mozilla.interfaces.*;


public class HTMLTableElementImpl extends HTMLElementImpl implements org.w3c.dom.html2.HTMLTableElement
{
    protected HTMLTableElementImpl(nsIDOMHTMLTableElement mozInst)
    {
        super( mozInst );
    }

    public static HTMLTableElementImpl getDOMInstance(nsIDOMHTMLTableElement mozInst)
    {
        HTMLTableElementImpl node = (HTMLTableElementImpl) instances.get(mozInst);
        return node == null ? new HTMLTableElementImpl(mozInst) : node;
    }
    
    @Override
	public nsIDOMHTMLTableElement getInstance()
    {
        //This was already queryinterfaced, so safe to cast
        return (nsIDOMHTMLTableElement) moz;
    }
    
    public void deleteTHead()
    {
        getInstance().deleteTHead();
    }
    
    public HTMLCollection getRows()
    {
        nsIDOMHTMLCollection result = getInstance().getRows();
        return new HTMLCollectionImpl(result);
    }
    
    public HTMLTableCaptionElement getCaption()
    {
        nsIDOMHTMLTableCaptionElement result = getInstance().getCaption();
        return (HTMLTableCaptionElement) NodeFactory.getNodeInstance(result);
    }
    
    public HTMLElement createCaption()
    {
        nsIDOMHTMLElement result = getInstance().createCaption();
        return (HTMLElement) NodeFactory.getNodeInstance(result);
    }
    
    public void setWidth(String width)
    {
        getInstance().setWidth(width);
    }
    
    public void setRules(String rules)
    {
        getInstance().setRules(rules);
    }
    
    public HTMLElement createTFoot()
    {
        nsIDOMHTMLElement result = getInstance().createTFoot();
        return (HTMLElement) NodeFactory.getNodeInstance(result);
    }
    
    public String getRules()
    {
        String result = getInstance().getRules();
        return result;
    }
    
    public String getFrame()
    {
        String result = getInstance().getFrame();
        return result;
    }
    
    public void deleteRow(int index)
    {
        getInstance().deleteRow(index);
    }
    
    public void setTHead(HTMLTableSectionElement tHead)
    {
        nsIDOMHTMLTableSectionElement mozThead = ((HTMLTableSectionElementImpl) tHead).getInstance();
        getInstance().setTHead(mozThead);
    }
    
    public void setTFoot(HTMLTableSectionElement tFoot)
    {
        nsIDOMHTMLTableSectionElement mozTfoot = ((HTMLTableSectionElementImpl) tFoot).getInstance();
        getInstance().setTFoot(mozTfoot);
    }
    
    public void setCellSpacing(String cellSpacing)
    {
        getInstance().setCellSpacing(cellSpacing);
    }
    
    public HTMLCollection getTBodies()
    {
        nsIDOMHTMLCollection result = getInstance().getTBodies();
        return new HTMLCollectionImpl(result);
    }
    
    public void setBgColor(String bgColor)
    {
        getInstance().setBgColor(bgColor);
    }
    
    public HTMLElement createTHead()
    {
        nsIDOMHTMLElement result = getInstance().createTHead();
        return (HTMLElement) NodeFactory.getNodeInstance(result);
    }
    
    public void setSummary(String summary)
    {
        getInstance().setSummary(summary);
    }
    
    public HTMLTableSectionElement getTHead()
    {
        nsIDOMHTMLTableSectionElement result = getInstance().getTHead();
        return (HTMLTableSectionElement) NodeFactory.getNodeInstance(result);
    }
    
    public void setAlign(String align)
    {
        getInstance().setAlign(align);
    }
    
    public HTMLTableSectionElement getTFoot()
    {
        nsIDOMHTMLTableSectionElement result = getInstance().getTFoot();
        return (HTMLTableSectionElement) NodeFactory.getNodeInstance(result);
    }
    
    public String getSummary()
    {
        String result = getInstance().getSummary();
        return result;
    }
    
    public String getAlign()
    {
        String result = getInstance().getAlign();
        return result;
    }
    
    public void setCaption(HTMLTableCaptionElement caption)
    {
        nsIDOMHTMLTableCaptionElement mozCaption = ((HTMLTableCaptionElementImpl) caption).getInstance();
        getInstance().setCaption(mozCaption);
    }
    
    public void deleteTFoot()
    {
        getInstance().deleteTFoot();
    }
    
    public String getWidth()
    {
        String result = getInstance().getWidth();
        return result;
    }
    
    public void setFrame(String frame)
    {
        getInstance().setFrame(frame);
    }
    
    public String getCellPadding()
    {
        String result = getInstance().getCellPadding();
        return result;
    }
    
    public String getBorder()
    {
        String result = getInstance().getBorder();
        return result;
    }
    
    public HTMLElement insertRow(int index)
    {
        nsIDOMHTMLElement result = getInstance().insertRow(index);
        return (HTMLElement) NodeFactory.getNodeInstance(result);
    }
    
    public void setBorder(String border)
    {
        getInstance().setBorder(border);
    }
    
    public void deleteCaption()
    {
        getInstance().deleteCaption();
    }
    
    public String getCellSpacing()
    {
        String result = getInstance().getCellSpacing();
        return result;
    }
    
    public String getBgColor()
    {
        String result = getInstance().getBgColor();
        return result;
    }
    
    public void setCellPadding(String cellPadding)
    {
        getInstance().setCellPadding(cellPadding);
    }
    
}
